


C************************************************************************
 
                SUBROUTINE velr (gdev, coordmax, istart, iend,
     &				infostr)
 
C************************************************************************
C  Generates diagnostics on the radially dependent variables, for the 
C  particles numbered istart - iend.
C               Mcomp   : total mass in particles istart - iend
C               rcore   : expected, or initial, core radius of the distribution
C 
C               dens   : radial density profile generated by program
C               inbin    : radial distribution of particles generated by program
C         meanvR=velR   : average radial velocity
C               dispR: radial velocity dispersion of the generated distr.
C               dispT: generated tangential velocity dispersion
C               dens      : expected (model) radial density profile
C               aniso   :  velocity anisotropy parameter
C  Calculates a non-linear least-squares fit to the radial density distrib.
C  to find true core radius, r0fit.
C
C  Calculates radii Rm with 10%, 20%, 30%,... of the galaxy mass (6/9/988)
C  9/9/93: Modify Rm to contain also 1%, 2%, 5%, 95%, 98%, 99% (16 values)
C-----------------------------------------------------------------------------
 
	IMPLICIT NONE

	INCLUDE 'nora.def'

	INTEGER nbin
	PARAMETER (nbin=40)
	REAL dist(nbin), logdist(nbin), dlogr

        INTEGER n, i, k, istart, iend, inbin(nbin), nbods
        REAL rho(nbin), Mr(nbin),v,
     1          dispR(nbin), dispT(nbin), totm,
     1          Rm(16), FRM(16), coordmax, eps, PI,
     1		meanvR(nbin), meanvT(nbin), aniso(nbin)
	CHARACTER*(*) gdev, infostr(*)
 
	REAL r, th, ph, vr, vt, phiv, rn, eb, ppot
	DIMENSION r(nmax), th(nmax), ph(nmax),eb(nmax)
C,ppot(nmax)
	DIMENSION vr(nmax), vt(nmax), phiv(nmax)

	PI = ACOS(-1.)
C--------------
C  Create linearly-spaced grid of log-r values between eps and rmax
C--------------
	eps = 0.01
        CALL loggrid(coordmax, eps, nbin, logdist, dlogr)

        DO 50 i = 1, nbin
                dist(i) = 10 ** logdist(i)
 50     CONTINUE

C---------
C  Total mass
C--------
	nbods = header(1)
	totm = 0.0
	DO 5 n = istart, iend
	    totm = totm + pmass(n)
 5      CONTINUE
 
C----------
C  Fill spherical coordinate arrays: r, COS(theta), phi, 
C---------
	CALL XYZtoRTP (istart, iend, x, y, z, r, th, ph)
CCC	PRINT '(3E12.4)', (r(k), th(k), ph(k), k=100,120)
	CALL VelToCyl (istart, iend, r, th, ph, vx, vy, vz, vr, vt, phiv)
CCC	PRINT '(3E12.4)', (vr(k), vt(k), phiv(k), k=100,120)

C-------------
C  Bin the generated radial distribution
C  Bin the distribution of radial and tangential velocity dispersions
C----------------
        DO 10 i = 1, nbin
                inbin(i) = 0
                rho(i) = 0.e0
                meanvR(i) = 0.e0
                meanvT(i) = 0.e0
                dispR(i) = 0.e0
                dispT(i) = 0.e0
                aniso(i) = 0.e0
 10     CONTINUE
        DO 20 n = istart, iend
		rn = LOG10 (r(n))
                IF (rn .LT. logdist(1)) THEN
                        i = 1
                ELSE
                        i = 2 + INT((rn - logdist(1)) / dlogr)
                END IF

                IF (i .GT. nbin) GO TO 20
                
                inbin(i) = inbin(i) + 1
                rho(i)  = rho(i)  + pmass(n)
                meanvR(i) = meanvR(i) + pmass(n) * vr(n)
                meanvT(i) = meanvT(i) + pmass(n) * vt(n)
                v=sqrt(vr(n)*vr(n)+vt(n)*vt(n))
                aniso(i)=aniso(i)+pmass(n)*abs(vr(n))/v
 20     CONTINUE

        DO 21 i = 1, nbin
	    IF (rho(i) .LT. 1.e-14) THEN
		meanvR(i) = -10000.e0
		meanvT(i) = -10000.e0
                aniso(i)=-10000.e0
	    ELSE
		meanvR(i) = meanvR(i) / rho(i)
		meanvT(i) = meanvT(i) / rho(i)
                aniso(i)  = aniso(i) / rho(i)
	    END IF

 21     CONTINUE

        DO 22 n = istart, iend
		rn = LOG10 (r(n))
                IF (rn .LT. logdist(1)) THEN
                        i = 1
                ELSE
                        i = 2 + INT((rn - logdist(1)) / dlogr)
                END IF

                IF (i .GT. nbin) GO TO 22
                
                dispR(i) = dispR(i) + 
     1				pmass(n) * (vr(n)-meanvR(i))**2
                dispT(i) = dispT(i) + 
     1				pmass(n) * (vt(n)-meanvT(i))**2
 22     CONTINUE

C------------
C  Velocity dispersions
C  This has to be done before rho is divided by the volume of each bin
C---------------
        DO 25 i = 1, nbin
                IF (rho(i) .LT. 1.e-14) THEN
                        dispR(i) = 0.e0
                        dispT(i) = 0.e0
                ELSE
                        dispR(i) = SQRT (dispR(i) / rho(i))
                        dispT(i) = SQRT (dispT(i) / rho(i))
                END IF
 25     CONTINUE
 
C---------------
C  Find the radii containing 10%, 20%, 30%,... of the galaxy mass. 
C  This has to be done before rho is divided by the volume of each bin
C  Store in array Rm(16)
C---------------
	Mr(1) = rho(1)
	DO 28 i = 2, nbin
	    Mr(i) = Mr(i-1) + rho(i)
28	CONTINUE
        CALL findRm(totm, dist, Mr, Rm, FRM, nbin)
 
C---------------
C  Find mass per unit volume for each radial bin
C  Protect against rho=0 in empty bins
C---------------
        DO 30 i = 1, nbin
                rho(i) = rho(i) / 
     1               (4.e0 * PI * (dist(i)**3 - dist(i-1)**3) / 3.e0)
		IF (rho(i) .EQ. 0.) rho(i) = 1.e-10
 30     CONTINUE
 
C--------
C  Output 
C--------





        do i=istart,iend 
          eb(i)=ppot(i)+.5*(vr(i)**2+vt(i)**2)
        enddo

	CALL velRout(gdev, dist, inbin, meanvR, meanvT, aniso, Rm, FRM,
     &		totm,istart,iend,coordmax,r,vr,vt,eb,infostr)
 
        RETURN
        END
